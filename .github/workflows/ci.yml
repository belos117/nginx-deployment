name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_TOKEN: ${{ secrets.TF_TOKEN }}
      ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
      HOST_IP: ${{ secrets.HOST_IP }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to the latest

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Authenticate AWS
        uses: actions/setup-node@v4
        with:
          node-version: "14"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY }}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_KEY }}"
          aws-region: eu-west-2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
      - name: Terraform Apply
        id: apply
        run: |
          cd app-server/
          terraform init
          terraform apply -auto-approve

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Get instance IP
        run: |
          IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=my-instance" "Name=instance-state-name,Values=running" \
            --query 'Reservations[].Instances[].PublicIpAddress' \
            --output text)
          if [ -z "$IP" ]; then
            echo "Error: Could not find instance IP"
            exit 1
          fi
          echo "HOST_IP=$IP" >> $GITHUB_ENV
          echo "Found instance IP: $IP"

      - name: Verify HOST_IP
        run: |
          if [ -z "${{ env.HOST_IP }}" ]; then
            echo "HOST_IP is not set"
            exit 1
          fi

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Running ssh-keyscan for ${{ env.HOST_IP }}"
          ssh-keyscan -H "${{ env.HOST_IP }}" >> ~/.ssh/known_hosts || exit 1

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Run Ansible playbook
        run: |
            ansible-playbook -i "${{ env.HOST_IP }}," \
            --private-key ~/.ssh/id_rsa \
            -u ${{ secrets.ANSIBLE_USER }} \
            deploy-server.yml